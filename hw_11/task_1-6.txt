Завдання 1.
Напишіть в нотації Великого О, яка часова складність методу append класу list. ОБЕРЕЖНО: важлива точна відповідь

: O(1) если хватает памяти
: O(N) если памяти не хватает и приходится создавать еще ячейку и перезаписывать список

Завдання 2.
Напишіть в нотації Великого О, яка часова складність перевірки входження елементу в список. Наприклад: elem in my_list.

:O(N)

Завдання 3.
Напишіть в нотації Великого О, яка часова складність методу pop класу list. а) в загальному випадку б) конкретно для випадку без параметру або з параметром -1.

: a) загальний випадок: O(N)
  б) конкретно для випадку без параметру або з параметром -1: O(1)

Завдання 4.
Напишіть в нотації Великого О, яка часова складність додавання елементу в словник. ОБЕРЕЖНО: важлива точна відповідь.

: O(1) + время на хеширование элемента

Завдання 5.
Напишіть в нотації Великого О, яка часова складність перевірки входження елементу в словник. Наприклад: elem in my_dict.

: O(1)

Завдання 6.
Напишіть в нотації Великого О, яка часова складність даного коду, якщо в списку value є N елементів:
if isinstance(value, list):
    for i in range(0, 100, 3):  # O(N * 34)
        if i in value:
            value.remove(i)     # O(N)

: O(N^2) // Потому что форматируем список 34 раза

Завдання 7.
Напишіть в нотації Великого О, яка часова складність даного коду, якщо в списку a є N елементів:
work_list = [*a]
for i in range(len(work_list)):                     #O (N)
    for j in range(1, len(work_list)):              #O (N)
        if work_list[j-1] > work_list[j]:
            buffer = work_list[j-1]                 # O(1)
            work_list[j-1] = work_list[j]           # O(1)
            work_list[j] = buffer                   # O(1)

: O(N^2)

Завдання 8.
Напишіть в нотації Великого О, яка часова складність даного коду, якщо в списку some_list є N елементів:
result = {} 
for elem in some_list:        # O(N)
    if elem not in result:
        result[elem] = True   # O(1)

: O(N)